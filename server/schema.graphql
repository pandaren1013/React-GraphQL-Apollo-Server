type Query {
  hello: String
  record(id: ID!): Record
  records: [Record]
  sort_users: [Record]
  pages(page: Int): [Record]
  users: [userResponse]
  user: userResponse
}

type Mutation {
  register(name: String, email: String, password: String): userResponse
  login(name: String,email: String, password: String): userResponse
  createRecord(name: String!, position: String,score:String, level: String): Record
  deleteRecord(id: ID!): Boolean
  pagenation(page: Int!): [Record]
  updateRecord(id: ID!, name: String, position: String, score:String, level: String): Record
}

type Record {
  id: ID
  name: String
  position: String
  score:String
  level: String
}
type userResponse {
    id: ID
    name: String
    email: String
    password: String
    token:String 
   
  }

type User {
    id: String!
    name: String!
    email: String!
  }
type Page {
    id: ID!
    name: String!
  }

type Sort {
  page: Int
  limit:Int
  
}
